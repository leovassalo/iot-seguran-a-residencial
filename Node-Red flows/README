Node Red será o principal gerenciador do RasberryPi-3, controlando a entrada dos comandos da dashboard ou de sensores externos
e os redirecionando apropriadamente para o ESP-32 e/ou para suas variáveis de estado;

Tanto microfone quanto DHT estão localizados no próprio gateway (Raspi), ao passo que periféricos como Luzes/LEDs, travas/relés de estado
e sensores (como de gás) vão no microcontrolador agregado (ESP);

Atualmente conta com todas as nodes necessárias para entendimento de uma "wake word" (Jarvis), respondendo tal comando com uma frase
de "confirmação"/"Ja pode falar". Em seguida comandos como "Qual a temperatura" são interpretados por uma Node do tipo Switch, que
redireciona apropriadamente para a ação expecificada pelo usuário;

Sistemas já disponíveis:
  - leitura de Temperatura
  - leitura de Umidade
  - ativação remota das luzes
  - ativação remota de uma trava
  - resposta interativa para comandos desconhecidos *
Ainda carecem serem programados:
  - luz de emergência
  - estado dos sensores atuantes no ESP
  - ademais interações humano-Jarvis ("Ligando as luzes", "Cozinha requer atenção", etc...)

* Conta com um sistema de "Desculpa, não entendi", toda vez que a wake-word é identificada mas a frase seguinte não está nas listadas;
 
Comandos disponíveis/Instruções de uso:
Ao se iniciar o sistema o microfone fica em espera da wake-word "Jarvis". Ao entendê-la com sucesso, a assistente responderá uma frase de confirmação.
Logo após tal interação, é possível dizer o que se deseja com o seguinte formato: acesso-ação, um par de palavras ditas idealmente em sequência,
onde as palavras de acesso:
* "Qual a":
    Para esse acesso temos as opções "Temperatura" e "Umidade", que retornam, por operações Text To Speech, a leitura atual do DHT, respectivo ao que foi solicitado.
* "Luzes":
    Aqui, "Acender" e "Desligar" mandam um sinal mqtt de ON ou OFF, respectivamente, que ativa o led interno localizado na placa ESP.
* e "Trava":
    Do qual é possível requisitar "Trancar", "Destrancar" e "Estado". Os dois primeiros o executam na trava localizada no ESP,
    enquanto o último lê o estado atual da mesma.
    
 No Node-Red também se encontram programações relacionadas a um banco de dados de todos os estados atuais de luzes, travas e temperatura
 - exemplos disponíveis nos arquivos .txt no Git -, e um sistema que atualiza ou devolve esses dados sempre que o aplicativo ou o site os requisitam.

https://www.youtube.com/watch?v=_ydMlTassYc
